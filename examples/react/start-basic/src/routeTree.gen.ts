/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import type { FileRoutesByPath, CreateFileRoute } from '@tanstack/react-router'
import { Route as rootRoute } from './routes/__root'
import {
  Route as UsersImport,
  ServerRoute as UsersServerRoute,
} from './routes/users'
import { Route as RedirectImport } from './routes/redirect'
import { Route as PostsImport } from './routes/posts'
import { Route as DeferredImport } from './routes/deferred'
import { Route as PathlessLayoutImport } from './routes/_pathlessLayout'
import { Route as IndexImport } from './routes/index'
import { Route as UsersIndexImport } from './routes/users.index'
import { Route as PostsIndexImport } from './routes/posts.index'
import {
  Route as UsersUserIdImport,
  ServerRoute as UsersUserIdServerRoute,
} from './routes/users.$userId'
import { Route as PostsPostIdImport } from './routes/posts.$postId'
import { Route as PathlessLayoutNestedLayoutImport } from './routes/_pathlessLayout/_nested-layout'
import { Route as PostsPostIdDeepImport } from './routes/posts_.$postId.deep'
import { Route as PathlessLayoutNestedLayoutRouteBImport } from './routes/_pathlessLayout/_nested-layout/route-b'
import { Route as PathlessLayoutNestedLayoutRouteAImport } from './routes/_pathlessLayout/_nested-layout/route-a'

// Create/Update Routes

const UsersRoute = UsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRoute,
} as any)

const RedirectRoute = RedirectImport.update({
  id: '/redirect',
  path: '/redirect',
  getParentRoute: () => rootRoute,
} as any)

const PostsRoute = PostsImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const DeferredRoute = DeferredImport.update({
  id: '/deferred',
  path: '/deferred',
  getParentRoute: () => rootRoute,
} as any)

const PathlessLayoutRoute = PathlessLayoutImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersIndexRoute = UsersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UsersRoute,
} as any)

const PostsIndexRoute = PostsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRoute,
} as any)

const UsersUserIdRoute = UsersUserIdImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => UsersRoute,
} as any)

const PostsPostIdRoute = PostsPostIdImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => PostsRoute,
} as any)

const PathlessLayoutNestedLayoutRoute = PathlessLayoutNestedLayoutImport.update(
  {
    id: '/_nested-layout',
    getParentRoute: () => PathlessLayoutRoute,
  } as any,
)

const PostsPostIdDeepRoute = PostsPostIdDeepImport.update({
  id: '/posts_/$postId/deep',
  path: '/posts/$postId/deep',
  getParentRoute: () => rootRoute,
} as any)

const PathlessLayoutNestedLayoutRouteBRoute =
  PathlessLayoutNestedLayoutRouteBImport.update({
    id: '/route-b',
    path: '/route-b',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)

const PathlessLayoutNestedLayoutRouteARoute =
  PathlessLayoutNestedLayoutRouteAImport.update({
    id: '/route-a',
    path: '/route-a',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutImport
      parentRoute: typeof rootRoute
    }
    '/deferred': {
      id: '/deferred'
      path: '/deferred'
      fullPath: '/deferred'
      preLoaderRoute: typeof DeferredImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsImport
      parentRoute: typeof rootRoute
    }
    '/redirect': {
      id: '/redirect'
      path: '/redirect'
      fullPath: '/redirect'
      preLoaderRoute: typeof RedirectImport
      parentRoute: typeof rootRoute
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersImport
      parentRoute: typeof rootRoute
    }
    '/_pathlessLayout/_nested-layout': {
      id: '/_pathlessLayout/_nested-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutNestedLayoutImport
      parentRoute: typeof PathlessLayoutImport
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdImport
      parentRoute: typeof PostsImport
    }
    '/users/$userId': {
      id: '/users/$userId'
      path: '/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof UsersUserIdImport
      parentRoute: typeof UsersImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof PostsImport
    }
    '/users/': {
      id: '/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof UsersIndexImport
      parentRoute: typeof UsersImport
    }
    '/_pathlessLayout/_nested-layout/route-a': {
      id: '/_pathlessLayout/_nested-layout/route-a'
      path: '/route-a'
      fullPath: '/route-a'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteAImport
      parentRoute: typeof PathlessLayoutNestedLayoutImport
    }
    '/_pathlessLayout/_nested-layout/route-b': {
      id: '/_pathlessLayout/_nested-layout/route-b'
      path: '/route-b'
      fullPath: '/route-b'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteBImport
      parentRoute: typeof PathlessLayoutNestedLayoutImport
    }
    '/posts_/$postId/deep': {
      id: '/posts_/$postId/deep'
      path: '/posts/$postId/deep'
      fullPath: '/posts/$postId/deep'
      preLoaderRoute: typeof PostsPostIdDeepImport
      parentRoute: typeof rootRoute
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/',
    ServerFileRoutesByPath['/']['parentRoute'],
    ServerFileRoutesByPath['/']['id'],
    ServerFileRoutesByPath['/']['path'],
    ServerFileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/_pathlessLayout' {
  const createFileRoute: CreateFileRoute<
    '/_pathlessLayout',
    FileRoutesByPath['/_pathlessLayout']['parentRoute'],
    FileRoutesByPath['/_pathlessLayout']['id'],
    FileRoutesByPath['/_pathlessLayout']['path'],
    FileRoutesByPath['/_pathlessLayout']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/_pathlessLayout',
    ServerFileRoutesByPath['/_pathlessLayout']['parentRoute'],
    ServerFileRoutesByPath['/_pathlessLayout']['id'],
    ServerFileRoutesByPath['/_pathlessLayout']['path'],
    ServerFileRoutesByPath['/_pathlessLayout']['fullPath']
  >
}
declare module './routes/deferred' {
  const createFileRoute: CreateFileRoute<
    '/deferred',
    FileRoutesByPath['/deferred']['parentRoute'],
    FileRoutesByPath['/deferred']['id'],
    FileRoutesByPath['/deferred']['path'],
    FileRoutesByPath['/deferred']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/deferred',
    ServerFileRoutesByPath['/deferred']['parentRoute'],
    ServerFileRoutesByPath['/deferred']['id'],
    ServerFileRoutesByPath['/deferred']['path'],
    ServerFileRoutesByPath['/deferred']['fullPath']
  >
}
declare module './routes/posts' {
  const createFileRoute: CreateFileRoute<
    '/posts',
    FileRoutesByPath['/posts']['parentRoute'],
    FileRoutesByPath['/posts']['id'],
    FileRoutesByPath['/posts']['path'],
    FileRoutesByPath['/posts']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/posts',
    ServerFileRoutesByPath['/posts']['parentRoute'],
    ServerFileRoutesByPath['/posts']['id'],
    ServerFileRoutesByPath['/posts']['path'],
    ServerFileRoutesByPath['/posts']['fullPath']
  >
}
declare module './routes/redirect' {
  const createFileRoute: CreateFileRoute<
    '/redirect',
    FileRoutesByPath['/redirect']['parentRoute'],
    FileRoutesByPath['/redirect']['id'],
    FileRoutesByPath['/redirect']['path'],
    FileRoutesByPath['/redirect']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/redirect',
    ServerFileRoutesByPath['/redirect']['parentRoute'],
    ServerFileRoutesByPath['/redirect']['id'],
    ServerFileRoutesByPath['/redirect']['path'],
    ServerFileRoutesByPath['/redirect']['fullPath']
  >
}
declare module './routes/users' {
  const createFileRoute: CreateFileRoute<
    '/users',
    FileRoutesByPath['/users']['parentRoute'],
    FileRoutesByPath['/users']['id'],
    FileRoutesByPath['/users']['path'],
    FileRoutesByPath['/users']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/users',
    ServerFileRoutesByPath['/users']['parentRoute'],
    ServerFileRoutesByPath['/users']['id'],
    ServerFileRoutesByPath['/users']['path'],
    ServerFileRoutesByPath['/users']['fullPath']
  >
}
declare module './routes/_pathlessLayout/_nested-layout' {
  const createFileRoute: CreateFileRoute<
    '/_pathlessLayout/_nested-layout',
    FileRoutesByPath['/_pathlessLayout/_nested-layout']['parentRoute'],
    FileRoutesByPath['/_pathlessLayout/_nested-layout']['id'],
    FileRoutesByPath['/_pathlessLayout/_nested-layout']['path'],
    FileRoutesByPath['/_pathlessLayout/_nested-layout']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/_pathlessLayout/_nested-layout',
    ServerFileRoutesByPath['/_pathlessLayout/_nested-layout']['parentRoute'],
    ServerFileRoutesByPath['/_pathlessLayout/_nested-layout']['id'],
    ServerFileRoutesByPath['/_pathlessLayout/_nested-layout']['path'],
    ServerFileRoutesByPath['/_pathlessLayout/_nested-layout']['fullPath']
  >
}
declare module './routes/posts.$postId' {
  const createFileRoute: CreateFileRoute<
    '/posts/$postId',
    FileRoutesByPath['/posts/$postId']['parentRoute'],
    FileRoutesByPath['/posts/$postId']['id'],
    FileRoutesByPath['/posts/$postId']['path'],
    FileRoutesByPath['/posts/$postId']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/posts/$postId',
    ServerFileRoutesByPath['/posts/$postId']['parentRoute'],
    ServerFileRoutesByPath['/posts/$postId']['id'],
    ServerFileRoutesByPath['/posts/$postId']['path'],
    ServerFileRoutesByPath['/posts/$postId']['fullPath']
  >
}
declare module './routes/users.$userId' {
  const createFileRoute: CreateFileRoute<
    '/users/$userId',
    FileRoutesByPath['/users/$userId']['parentRoute'],
    FileRoutesByPath['/users/$userId']['id'],
    FileRoutesByPath['/users/$userId']['path'],
    FileRoutesByPath['/users/$userId']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/users/$userId',
    ServerFileRoutesByPath['/users/$userId']['parentRoute'],
    ServerFileRoutesByPath['/users/$userId']['id'],
    ServerFileRoutesByPath['/users/$userId']['path'],
    ServerFileRoutesByPath['/users/$userId']['fullPath']
  >
}
declare module './routes/posts.index' {
  const createFileRoute: CreateFileRoute<
    '/posts/',
    FileRoutesByPath['/posts/']['parentRoute'],
    FileRoutesByPath['/posts/']['id'],
    FileRoutesByPath['/posts/']['path'],
    FileRoutesByPath['/posts/']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/posts/',
    ServerFileRoutesByPath['/posts/']['parentRoute'],
    ServerFileRoutesByPath['/posts/']['id'],
    ServerFileRoutesByPath['/posts/']['path'],
    ServerFileRoutesByPath['/posts/']['fullPath']
  >
}
declare module './routes/users.index' {
  const createFileRoute: CreateFileRoute<
    '/users/',
    FileRoutesByPath['/users/']['parentRoute'],
    FileRoutesByPath['/users/']['id'],
    FileRoutesByPath['/users/']['path'],
    FileRoutesByPath['/users/']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/users/',
    ServerFileRoutesByPath['/users/']['parentRoute'],
    ServerFileRoutesByPath['/users/']['id'],
    ServerFileRoutesByPath['/users/']['path'],
    ServerFileRoutesByPath['/users/']['fullPath']
  >
}
declare module './routes/_pathlessLayout/_nested-layout/route-a' {
  const createFileRoute: CreateFileRoute<
    '/_pathlessLayout/_nested-layout/route-a',
    FileRoutesByPath['/_pathlessLayout/_nested-layout/route-a']['parentRoute'],
    FileRoutesByPath['/_pathlessLayout/_nested-layout/route-a']['id'],
    FileRoutesByPath['/_pathlessLayout/_nested-layout/route-a']['path'],
    FileRoutesByPath['/_pathlessLayout/_nested-layout/route-a']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/_pathlessLayout/_nested-layout/route-a',
    ServerFileRoutesByPath['/_pathlessLayout/_nested-layout/route-a']['parentRoute'],
    ServerFileRoutesByPath['/_pathlessLayout/_nested-layout/route-a']['id'],
    ServerFileRoutesByPath['/_pathlessLayout/_nested-layout/route-a']['path'],
    ServerFileRoutesByPath['/_pathlessLayout/_nested-layout/route-a']['fullPath']
  >
}
declare module './routes/_pathlessLayout/_nested-layout/route-b' {
  const createFileRoute: CreateFileRoute<
    '/_pathlessLayout/_nested-layout/route-b',
    FileRoutesByPath['/_pathlessLayout/_nested-layout/route-b']['parentRoute'],
    FileRoutesByPath['/_pathlessLayout/_nested-layout/route-b']['id'],
    FileRoutesByPath['/_pathlessLayout/_nested-layout/route-b']['path'],
    FileRoutesByPath['/_pathlessLayout/_nested-layout/route-b']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/_pathlessLayout/_nested-layout/route-b',
    ServerFileRoutesByPath['/_pathlessLayout/_nested-layout/route-b']['parentRoute'],
    ServerFileRoutesByPath['/_pathlessLayout/_nested-layout/route-b']['id'],
    ServerFileRoutesByPath['/_pathlessLayout/_nested-layout/route-b']['path'],
    ServerFileRoutesByPath['/_pathlessLayout/_nested-layout/route-b']['fullPath']
  >
}
declare module './routes/posts_.$postId.deep' {
  const createFileRoute: CreateFileRoute<
    '/posts_/$postId/deep',
    FileRoutesByPath['/posts_/$postId/deep']['parentRoute'],
    FileRoutesByPath['/posts_/$postId/deep']['id'],
    FileRoutesByPath['/posts_/$postId/deep']['path'],
    FileRoutesByPath['/posts_/$postId/deep']['fullPath']
  >
  const createServerFileRoute: CreateServerFileRoute<
    '/posts_/$postId/deep',
    ServerFileRoutesByPath['/posts_/$postId/deep']['parentRoute'],
    ServerFileRoutesByPath['/posts_/$postId/deep']['id'],
    ServerFileRoutesByPath['/posts_/$postId/deep']['path'],
    ServerFileRoutesByPath['/posts_/$postId/deep']['fullPath']
  >
}

// Create and export the route tree

interface PathlessLayoutNestedLayoutRouteChildren {
  PathlessLayoutNestedLayoutRouteARoute: typeof PathlessLayoutNestedLayoutRouteARoute
  PathlessLayoutNestedLayoutRouteBRoute: typeof PathlessLayoutNestedLayoutRouteBRoute
}

const PathlessLayoutNestedLayoutRouteChildren: PathlessLayoutNestedLayoutRouteChildren =
  {
    PathlessLayoutNestedLayoutRouteARoute:
      PathlessLayoutNestedLayoutRouteARoute,
    PathlessLayoutNestedLayoutRouteBRoute:
      PathlessLayoutNestedLayoutRouteBRoute,
  }

const PathlessLayoutNestedLayoutRouteWithChildren =
  PathlessLayoutNestedLayoutRoute._addFileChildren(
    PathlessLayoutNestedLayoutRouteChildren,
  )

interface PathlessLayoutRouteChildren {
  PathlessLayoutNestedLayoutRoute: typeof PathlessLayoutNestedLayoutRouteWithChildren
}

const PathlessLayoutRouteChildren: PathlessLayoutRouteChildren = {
  PathlessLayoutNestedLayoutRoute: PathlessLayoutNestedLayoutRouteWithChildren,
}

const PathlessLayoutRouteWithChildren = PathlessLayoutRoute._addFileChildren(
  PathlessLayoutRouteChildren,
)

interface PostsRouteChildren {
  PostsPostIdRoute: typeof PostsPostIdRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const PostsRouteChildren: PostsRouteChildren = {
  PostsPostIdRoute: PostsPostIdRoute,
  PostsIndexRoute: PostsIndexRoute,
}

const PostsRouteWithChildren = PostsRoute._addFileChildren(PostsRouteChildren)

interface UsersRouteChildren {
  UsersUserIdRoute: typeof UsersUserIdRoute
  UsersIndexRoute: typeof UsersIndexRoute
}

const UsersRouteChildren: UsersRouteChildren = {
  UsersUserIdRoute: UsersUserIdRoute,
  UsersIndexRoute: UsersIndexRoute,
}

const UsersRouteWithChildren = UsersRoute._addFileChildren(UsersRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/posts': typeof PostsRouteWithChildren
  '/redirect': typeof RedirectRoute
  '/users': typeof UsersRouteWithChildren
  '/posts/$postId': typeof PostsPostIdRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/posts/': typeof PostsIndexRoute
  '/users/': typeof UsersIndexRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/posts/$postId/deep': typeof PostsPostIdDeepRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/redirect': typeof RedirectRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/posts': typeof PostsIndexRoute
  '/users': typeof UsersIndexRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/posts/$postId/deep': typeof PostsPostIdDeepRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_pathlessLayout': typeof PathlessLayoutRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/posts': typeof PostsRouteWithChildren
  '/redirect': typeof RedirectRoute
  '/users': typeof UsersRouteWithChildren
  '/_pathlessLayout/_nested-layout': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/posts/$postId': typeof PostsPostIdRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/posts/': typeof PostsIndexRoute
  '/users/': typeof UsersIndexRoute
  '/_pathlessLayout/_nested-layout/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/_pathlessLayout/_nested-layout/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/posts_/$postId/deep': typeof PostsPostIdDeepRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/deferred'
    | '/posts'
    | '/redirect'
    | '/users'
    | '/posts/$postId'
    | '/users/$userId'
    | '/posts/'
    | '/users/'
    | '/route-a'
    | '/route-b'
    | '/posts/$postId/deep'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/deferred'
    | '/redirect'
    | '/posts/$postId'
    | '/users/$userId'
    | '/posts'
    | '/users'
    | '/route-a'
    | '/route-b'
    | '/posts/$postId/deep'
  id:
    | '__root__'
    | '/'
    | '/_pathlessLayout'
    | '/deferred'
    | '/posts'
    | '/redirect'
    | '/users'
    | '/_pathlessLayout/_nested-layout'
    | '/posts/$postId'
    | '/users/$userId'
    | '/posts/'
    | '/users/'
    | '/_pathlessLayout/_nested-layout/route-a'
    | '/_pathlessLayout/_nested-layout/route-b'
    | '/posts_/$postId/deep'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PathlessLayoutRoute: typeof PathlessLayoutRouteWithChildren
  DeferredRoute: typeof DeferredRoute
  PostsRoute: typeof PostsRouteWithChildren
  RedirectRoute: typeof RedirectRoute
  UsersRoute: typeof UsersRouteWithChildren
  PostsPostIdDeepRoute: typeof PostsPostIdDeepRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PathlessLayoutRoute: PathlessLayoutRouteWithChildren,
  DeferredRoute: DeferredRoute,
  PostsRoute: PostsRouteWithChildren,
  RedirectRoute: RedirectRoute,
  UsersRoute: UsersRouteWithChildren,
  PostsPostIdDeepRoute: PostsPostIdDeepRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_pathlessLayout",
        "/deferred",
        "/posts",
        "/redirect",
        "/users",
        "/posts_/$postId/deep"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_pathlessLayout": {
      "filePath": "_pathlessLayout.tsx",
      "children": [
        "/_pathlessLayout/_nested-layout"
      ]
    },
    "/deferred": {
      "filePath": "deferred.tsx"
    },
    "/posts": {
      "filePath": "posts.tsx",
      "children": [
        "/posts/$postId",
        "/posts/"
      ]
    },
    "/redirect": {
      "filePath": "redirect.tsx"
    },
    "/users": {
      "filePath": "users.tsx",
      "children": [
        "/users/$userId",
        "/users/"
      ]
    },
    "/_pathlessLayout/_nested-layout": {
      "filePath": "_pathlessLayout/_nested-layout.tsx",
      "parent": "/_pathlessLayout",
      "children": [
        "/_pathlessLayout/_nested-layout/route-a",
        "/_pathlessLayout/_nested-layout/route-b"
      ]
    },
    "/posts/$postId": {
      "filePath": "posts.$postId.tsx",
      "parent": "/posts"
    },
    "/users/$userId": {
      "filePath": "users.$userId.tsx",
      "parent": "/users"
    },
    "/posts/": {
      "filePath": "posts.index.tsx",
      "parent": "/posts"
    },
    "/users/": {
      "filePath": "users.index.tsx",
      "parent": "/users"
    },
    "/_pathlessLayout/_nested-layout/route-a": {
      "filePath": "_pathlessLayout/_nested-layout/route-a.tsx",
      "parent": "/_pathlessLayout/_nested-layout"
    },
    "/_pathlessLayout/_nested-layout/route-b": {
      "filePath": "_pathlessLayout/_nested-layout/route-b.tsx",
      "parent": "/_pathlessLayout/_nested-layout"
    },
    "/posts_/$postId/deep": {
      "filePath": "posts_.$postId.deep.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
